

(;-----------------------------------------------------------------;)
(;---------------------  PRIVATE DEFINITIONS  ---------------------;)
(;-----------------------------------------------------------------;)


Code : Type.
def Decode : Code -> Type.

cU : s : Sort -> Code.
cPi  : A : Code -> (Decode A -> Code) -> Code.

[s]   Decode (cU s)    --> Univ s.
[a,b] Decode (cPi a b) --> x : Decode a -> Decode (b x).


def uncode : t : Code -> Code -> Decode t.
def code   : t : Code -> Decode t -> Code.

[s,t] Term s t --> Decode (code (cU s) t).



(;----------------------------  Axiom  ----------------------------;)

[s,s',p] univ s s' p --> uncode (cU s') (cU s).


(;----------------------------  Rule  -----------------------------;)

[s1,s2,s3,p,a,b]
  prod s1 s2 s3 p a b
  -->
  uncode (cU s3)
    (cPi (code (cU s1) a)
         (x : Decode (code (cU s1) a) => code (cU s2) (b x))).


(;---------------------------  Casts  -----------------------------;)

[s1,s2,a,b,t]
  cast s1 s2 a b _ t
  -->
  uncode (code (cU s2) b) (code (code (cU s1) a) t).



(;-------------------------  Subtyping ----------------------------;)

[s] Cumul s s --> true.

def forall : c : Code -> (Decode c -> Bool) -> Bool.
[B] forall _ (x => B) --> B.

def ST : Code -> Code -> Bool.
[s1, s2] ST (cU s1)   (cU s2)    --> Cumul s1 s2
[a,b,b'] ST (cPi a b) (cPi a b') --> forall a (x : Decode a => ST (b x) (b' x)).
[A]      ST A         A          --> true.

[sa,sb,a,b] SubType sa sb a b --> ST (code (cU sa) a) (code (cU sb) b).



(;---------------------  Canonicity rules -------------------------;)

[s,t] uncode s (code s t) --> t.
[  t] code _ (uncode _ t) --> t.

[A,B,C,F]
  uncode (cPi A (x => B x)) (code (cPi A (x => C x)) (x => F x))
  -->
  x : Decode A => uncode (B x) (code (C x) (F x)).

[A,B,C,F,G]
  uncode (cPi A (x => B x)) (code (cPi A (x => C x)) F) G
  -->
  uncode (B G) (code (C G) (F G)).


(;------------------------  Coqine parameters  --------------------;)

(;
Normal forms of lifted types are uncoded codes:
Coqine lifted_type_pattern = recoded

Coqine _code      = code
Coqine _uncode    = uncode
Coqine _code_univ = cU
Coqine _code_prod = cPi
;)
