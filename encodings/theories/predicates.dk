(;-----------------------------------------------------------------;)
(;-------------------------  Coq encoding  ------------------------;)
(;-----------------------------------------------------------------;)

(;-------------------------  Nat definition  ----------------------;)

Nat : Type.
z : Nat.
s : Nat -> Nat.


(;----------------------  CTS Sorts definition  -------------------;)

prop : Sort.
set  : Sort.
type : Nat -> Sort.


(;---------------------  CTS Axiom definition  --------------------;)

[   ] Axiom prop         (type z    ) --> true.
[   ] Axiom set          (type z    ) --> true.
[   ] Axiom (type z    ) (type (s z)) --> true.
[i,j] Axiom (type (s i)) (type (s j)) --> Axiom (type i) (type j).


(;-----------------------  CTS Rule definition  -------------------;)

[     ] Rule _            prop         prop         --> true.
[i    ] Rule prop         i            i            --> true.
[     ] Rule set          set          set          --> true.
[j    ] Rule set          (type j    ) (type j    ) --> true.
[i    ] Rule (type i    ) set          (type i    ) --> true.
[i    ] Rule (type i    ) (type z    ) (type i    ) --> true.
[j    ] Rule (type z    ) (type j    ) (type j    ) --> true.
[i,j,k] Rule (type (s i)) (type (s j)) (type (s k)) --> Rule (type i) (type j) (type k).


(;-------------------  CTS Cumulativity definition  ---------------;)

[   ] Cumul prop         prop         --> true.
[   ] Cumul prop         set          --> true.
[i  ] Cumul prop         (type i    ) --> true.
[   ] Cumul set          set          --> true.
[i  ] Cumul set          (type i    ) --> true.
[i  ] Cumul (type z)     (type i    ) --> true.
[i,j] Cumul (type (s i)) (type (s j)) --> Cumul (type i) (type j).


(;-----------------------  LUB wrt Cumulativity  ------------------;)

def max : Nat -> Nat -> Nat.
[i  ] max i     z     --> i.
[j  ] max z     (s j) --> s j.
[i,j] max (s i) (s j) --> s (max i j).

[s  ] sup prop     s        --> s
[s  ] sup s        prop     --> s
[   ] sup set      set      --> set
[i  ] sup set      (type i) --> type i
[i  ] sup (type i) set      --> type i
[i,j] sup (type i) (type j) --> type (max i j).


(;------------------------  Other definitions  -------------------;)

(; These functions are provided to simplify the translation.
   - Axiom s (axiom s)       should reduce to I
   - Rule s1 s2 (rule s1 s2) should reduce to I
;)


def axiom : Sort -> Sort.
[]  axiom prop     --> type z.
[i] axiom (type i) --> type (s i).

def rule : Sort -> Sort -> Sort.
[s  ] rule prop     s        --> s
[   ] rule _        prop     --> prop
[   ] rule set      set      --> set
[i  ] rule set      (type i) --> type i
[i  ] rule (type i) set      --> type i
[i,j] rule (type i) (type j) --> type (max i j).
