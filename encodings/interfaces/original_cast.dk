(;-----------------------------------------------------------------;)
(;----------------------  PUBLIC DEFINITIONS  ---------------------;)
(;-----------------------------------------------------------------;)

(;---------------------------  Sorts  -----------------------------;)

Sort : Type.


(;---------------------  Types and terms  -------------------------;)

(; Type for encoded type codes ;)
Univ : s : Sort -> Type.

(; Type decoding function ;)
def Term : s : Sort -> a : Univ s -> Type.


(;-----------------------  CTS functions  -------------------------;)

def axiom : Sort -> Sort.
def rule  : Sort -> Sort -> Sort.
def sup   : Sort -> Sort -> Sort.


(;--------------------  Term public constructors  -----------------;)

def univ : s : Sort -> Univ (axiom s).

def prod : s1 : Sort -> s2 : Sort ->
           a : Univ s1 -> b : (Term s1 a -> Univ s2) -> Univ (rule s1 s2).

def lift : s1 : Sort -> s2 : Sort ->
           Univ s1 -> Univ (sup s1 s2).

def join : s1 : Sort -> s2 : Sort ->
           Univ s1 -> Univ s2 -> Univ (sup s1 s2).

def cast : s1 : S -> s2 : S ->
           a : U s1 -> b : U s2 ->
           T s1 a -> T (sup s1 s2) (join s1 s2 a b).


