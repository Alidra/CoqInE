# Binaries
COQ_MAKEFILE = coq_makefile
COQTOP = coqtop

DKFOLDER=/home/gaspi/github/dedukti/acu/
DKCHECK = $(DKFOLDER)/dkcheck.native
DKDEP = $(DKFOLDER)/dkdep.native

DKS = $(wildcard *.dk)
DKOS = $(DKS:.dk=.dko)

.PHONY: all	test compile export depend check clean Coq.dko
# Coq.dko is generated as a dependency by dkdep instead of ../dedukti/Coq.dko
# so we need to ignore it

.SUFFIXES: .dk .dko

all: debug

# Because the [.dk] files are generated by make, the dependencies cannot be
#	precalculated, so we need to call make twice.
debug: compile export depend
	make check

# Compile the local [.v] files that are not part of the stdlib
compile: CoqMakefile
	make -f CoqMakefile -

# Generate the [.dk] files by executing [Test.v]
export:
	$(COQTOP) -batch -debug -R ../src Coqine -R . Top -l Debug

# Check and compile the generated [.dk]
check: ../dedukti/Coq.dko Top__Debuglib.dko $(DKOS)

check: ../dedukti/Coq.dko Top__Debuglib.dko $(DKOS)

# Generate the dependencies of [.dk] files
depend:
	$(DKDEP) -v *.dk ../dedukti/*.dk > .depend


../dedukti/Coq.dko:
	make -C .. dedukti/Coq.dko

.dk.dko: depend ../dedukti/Coq.dko
	$(DKCHECK) -I ../dedukti -e -nl $<

clean: CoqMakefile
	make -f CoqMakefile - clean
	rm -rf *.dk *.dko .depend .*.aux *.vo
	rm CoqMakefile

CoqMakefile: Make
	$(COQ_MAKEFILE) -f Make > CoqMakefile

-include .depend

