# Binaries
COQ_MAKEFILE = coq_makefile
COQTOP = coqtop
DKCHECK = dkcheck
DKDEP = dkdep

# Contains the local test files that are not part of the stdlib
MAKEFILE_TEST = Makefile.test

DKS = $(wildcard *.dk)
DKOS = $(DKS:.dk=.dko)

.PHONY:	test compile export depend check clean
.SUFFIXES: .dk .dko

# Because the [.dk] files are generated by make, the dependencies cannot be
#	precalculated, so we need to call make twice.
test: compile export depend
	#	Call make again so that it include the updated depend file
	$(MAKE) check

# Compile the local [.v] files that are not part of the stdlib
compile:
	$(COQ_MAKEFILE) -f $(MAKEFILE_TEST) | make -f -

# Generate the [.dk] files by executing [Test.v]
export:
	$(COQTOP) -batch -debug -R ../src Dedukti -l Test

# Generate the dependencies of [.dk] files
depend:
	$(DKDEP) *.dk > .depend

# Check and compile the generated [.dk]
check: Coq.dko $(DKOS)

Coq.dko: ../dedukti/Coq.dk
	$(DKCHECK) -e ../dedukti/Coq.dk

.dk.dko: depend
	$(DKCHECK) -e -nl $<

clean:
	$(COQ_MAKEFILE) -f $(MAKEFILE_TEST) | make -f - clean
	rm -rf *.dk *.dko .depend

-include .depend

